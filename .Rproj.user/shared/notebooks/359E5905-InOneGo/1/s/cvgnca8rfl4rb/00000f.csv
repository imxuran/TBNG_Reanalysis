"0",""
"0","# Functions to compute similarity"
"0","compute_similarity <- function(data, method = ""correlation"", non_negative = TRUE) {"
"0","  if (method == ""correlation"") {"
"0","    corr_matrix <- cor(data, use = ""pairwise.complete.obs"")"
"0","    "
"0","    if (non_negative) {"
"0","      similarity_matrix <- (corr_matrix + 1) / 2  # Scale to [0, 1]"
"0","    } else {"
"0","      similarity_matrix <- corr_matrix "
"0","    }"
"0","   #similarity_matrix <- 1 - similarity_matrix"
"0","   "
"0","  } else if (method == ""euclidean"") {"
"0","   "
"0","    dist_matrix <- as.matrix(dist(t(data), method = ""euclidean""))  "
"0","    similarity_matrix <- 1 / (1 + dist_matrix) "
"0","    "
"0","  } else if (method == ""mahalanobis"") {"
"0","    "
"0","    dist_matrix <- as.matrix(vegdist(t(data), method = ""mahalanobis""))"
"0","    "
"0","    similarity_matrix <- 1 / (1 + dist_matrix)"
"0","    "
"0",""
"0","  } else {"
"0","    stop(""Unknown method. Choose 'correlation' or 'euclidean'"")"
"0","  }"
"0","  "
"0","  "
"0","  # Reorder the columns and rows of the matrix based on the new order defined above"
"0","  similarity_matrix <- similarity_matrix[intersect(trait_order,rownames(similarity_matrix)),intersect(trait_order,rownames(similarity_matrix))]"
"0","  "
"0","  return(similarity_matrix)"
"0","}"
"0",""
