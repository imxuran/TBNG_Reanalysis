"0",""
"0",""
"0","cPCA <- function(X_target, Y_background, alpha = 1, scale = TRUE, center = TRUE, ncomp = NULL) {"
"0","  # Preprocess"
"0","  X <- scale(X_target[,-1], center = center, scale = scale)"
"0","  Y <- scale(Y_background[,-1], center = center, scale = scale)"
"0",""
"0","  # Covariances"
"0","  cov_X <- cov(X)"
"0","  cov_Y <- cov(Y)"
"0",""
"0","  # Contrastive covariance matrix"
"0","  cov_c <- cov_X - alpha * cov_Y"
"0",""
"0","  # Eigen decomposition"
"0","  eig <- eigen(cov_c)"
"0","  V <- eig$vectors  # eigenvectors"
"0",""
"0","  # Optional limit on components"
"0","  if (!is.null(ncomp)) {"
"0","    V <- V[, 1:ncomp, drop = FALSE]"
"0","  }"
"0","  "
"0","  # Project datasets"
"0","  scores_X <- X %*% V"
"0","  scores_Y <- Y %*% V"
"0",""
"0","  # Compute per-component variance breakdown"
"0","  var_target     <- diag(t(V) %*% cov_X %*% V)"
"0","  var_background <- diag(t(V) %*% cov_Y %*% V)"
"0","  contrastive_variance <- var_target - alpha * var_background"
"0","  "
"0",""
"0","  # Return"
"0","  list("
"0","    eigenvectors = V,"
"0","    eigenvalues = eig$values[1:ncomp], "
"0","    var_target = var_target,"
"0","    var_background = var_background,"
"0","    contrastive_variance = contrastive_variance,"
"0","    scores_target = scores_X,"
"0","    scores_background = scores_Y,"
"0","    alpha = alpha,"
"0","    X_target = X_target,"
"0","    Y_background = Y_background,"
"0","    center = attr(X, ""scaled:center""),"
"0","    scale = attr(X, ""scaled:scale"")"
"0","  )"
"0","  "
"0","  "
"0","}"
"0","  "
