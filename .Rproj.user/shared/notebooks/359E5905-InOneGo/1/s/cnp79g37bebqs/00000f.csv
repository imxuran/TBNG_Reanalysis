"0",""
"0","# Function to plot chord diagram"
"0","  "
"0","cor_plot2 <- function(df, cutoff=0.05,highlight_chord = NULL) {"
"0","  "
"0","  #cutoff <- quantile(df,0.75)"
"0","  "
"0","  df_cut <- ifelse(abs(df) > cutoff, df, 0)"
"0","  diag(df_cut) <- 0"
"0",""
"0","  col_fun <- colorRamp2(c(cutoff, max(df_cut)), c(""#C9B2E4"", ""#3A0F73""))"
"0","  "
"0",""
"0","  rows <- rownames(df_cut)"
"0","  cols <- colnames(df_cut)"
"0","  combinations <- expand.grid(Row = rows, Col = cols)"
"0","  combinations$Value <- as.vector(df_cut)"
"0","  combinations$Color <- col_fun(combinations$Value)"
"0","  result <- combinations[, c(""Row"", ""Col"", ""Color"")]"
"0","  "
"0","  if (!is.null(highlight_chord)) {"
"0","    result$Color[result$Row == highlight_chord[1] & result$Col == highlight_chord[2]] <- ""#A6DBA0"""
"0","    result$Color[result$Row == highlight_chord[2] & result$Col == highlight_chord[1]] <- ""#A6DBA0"""
"0","  }"
"0","  "
"0","  circos.clear()"
"0",""
"0","  chordDiagram(df_cut, big.gap=2,  symmetric = TRUE, order = rownames(df_cut),"
"0","               directional = 1, transparency=0.5,"
"0","               group = group, annotationTrack = c(""grid"", ""axis""),"
"0","               col = result,"
"0","               grid.col = state_col2, preAllocateTracks = list(track.height = mm_h(4), track.margin = c(mm_h(4), 0)),"
"0","               link.sort = TRUE, link.decreasing = TRUE)"
"0",""
"0","  circos.track(track.index = 2, panel.fun = function(x, y) {"
"0","    sector.index = get.cell.meta.data(""sector.index"")"
"0","    xlim = get.cell.meta.data(""xlim"")"
"0","    ylim = get.cell.meta.data(""ylim"")"
"0","    circos.text(mean(xlim), mean(ylim), sector.index, cex = 0.6, niceFacing = TRUE)"
"0","    }, bg.border = NA)"
"0","  "
"0","  traits_in_diagram <- unique(rownames(df_cut)[rowSums(df_cut) != 0])"
"0","  "
"0","  "
"0","  for (n in names(families)) {"
"0","    if(length(traits_in_diagram[traits_in_diagram %in% families[[n]]])>0) {"
"0","      highlight.sector(traits_in_diagram[traits_in_diagram %in% families[[n]]], track.index = 1, col = family_colors[[n]], "
"0","                   text = n, cex = 0.8, text.col = ""white"", niceFacing = TRUE)"
"0","    }"
"0","  }"
"0",""
"0","}"
"0",""
